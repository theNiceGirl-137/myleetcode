//给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回 true ；否则，返回 false 。 
//
// 整数 n 是 4 的幂次方需满足：存在整数 x 使得 n == 4x 
//
// 
//
// 示例 1： 
//
// 
//输入：n = 16
//输出：true
// 
//
// 示例 2： 
//
// 
//输入：n = 5
//输出：false
// 
//
// 示例 3： 
//
// 
//输入：n = 1
//输出：true
// 
//
// 
//
// 提示： 
//
// 
// -231 <= n <= 231 - 1 
// 
//
// 
//
// 进阶： 
//
// 
// 你能不使用循环或者递归来完成本题吗？ 
// 
// Related Topics 位运算 递归 数学 
// 👍 261 👎 0


package leetcode
//leetcode submit region begin(Prohibit modification and deletion)
func isPowerOfFour(n int) bool {
	// 首先我们考虑一个数字是不是 2 的(整数)次方：如果一个数字 n 是 2 的整数次方，那么它
	// 的二进制一定是 0...010...0 这样的形式；考虑到 n − 1 的二进制是 0...001...1，这两个数求按位与的结果一定是 0
	// 因此如果 n & (n - 1) 为 0，那么这个数是 2 的次方
	// 如果这个数也是 4 的次方，那二进制表示中 1 的位置必须为奇数位
	// 我们可以把 n 和二进制的 10101...101(即十进制下的 1431655765)做按位与，如果结果不为 0，那么说明这个数是 4 的次方。\
	return n > 0 && n & (n-1) == 0 && n & 1431655765 != 0
}
//leetcode submit region end(Prohibit modification and deletion)
